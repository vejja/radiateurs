##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	server_name erquy.vejja.fr;
	return 301 https://$server_name$request_uri;
}


server {
	listen 443 ssl default_server;
	server_name erquy.vejja.fr;


	##
	# SSL Settings
	##

	# Protocols and ciphers
	ssl_protocols TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'EECDH+ECDSA+AESGCM:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
	# SSL session cache
	ssl_session_cache shared:SSL:10m;
	# The certificate chain we send to the browser
	ssl_certificate /etc/letsencrypt/live/erquy.vejja.fr/fullchain.pem;
	# Our own private key
	ssl_certificate_key /etc/letsencrypt/live/erquy.vejja.fr/privkey.pem;
	# The CA certificate that we use to verify the client
	#ssl_client_certificate /etc/nginx/ssl/blindspot.ca.pem;
	#ssl_verify_client optional;

    	##
    	# Strict Transport Security
    	##

    	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";


	##
	# OCSP Stapling
	##

	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;



	##
	# Static files
	##

	root /home/pi/radiateurs/client/www;
	index index.html;

	location / {
		# Authentication required
		auth_basic "Restricted Access";
		auth_basic_user_file /etc/nginx/.htpasswd;


		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;

		# Browser caching
		expires 365d; 		

		# External Livebox Access
		#proxy_pass http://192.168.1.1;
	}

	##
	# Node.js backend
	##

	location /api {
		proxy_pass http://websocket;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}
}
